# ────────────────────────── Triggers ─────────────────────────────
trigger:
  branches:
    include:
      - main
      - develop          # delete if not needed

# ────────────────────────── Variables ────────────────────────────
variables:
  # Azure DevOps service connection pointing to your new Azure subscription
  azureSubscription:   New-Azure-Conn

  # Azure resource names (already created in Central US)
  rgName:              ci-cd-rg
  acrName:             nithinkatruacr2
  stagingWebAppName:   myapp-stg
  prodWebAppName:      myapp-prd

  # Docker image metadata
  imageName:           sample-web
  imageTag:            $(Build.BuildId)

# ────────────────────────── Build Stage ──────────────────────────
stages:
- stage: Build
  displayName: "CI – Build & Push Image"
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest

    steps:
    - checkout: self

    # Node install / lint / tests (adjust to your project)
    - task: NodeTool@0
      inputs:
        versionSpec: "20.x"

    - script: npm ci --loglevel error
      displayName: "npm ci"

    - script: npm run lint
      displayName: "lint"

    - script: npm test
      displayName: "unit tests"

    # Log in to ACR
    - task: AzureCLI@2
      displayName: "ACR login"
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az acr login --name $(acrName)

    # Build & push Docker image
    - task: Bash@3
      displayName: "Build & push image"
      inputs:
        targetType: inline
        script: |
          docker build -t $(acrName).azurecr.io/$(imageName):$(imageTag) .
          docker push $(acrName).azurecr.io/$(imageName):$(imageTag)

# ─────────────── Deploy to Staging (automatic) ───────────────
- stage: Deploy_Staging
  displayName: "CD – Deploy to Staging"
  dependsOn: Build
  jobs:
  - deployment: DeployStaging
    environment: Staging
    pool:
      vmImage: ubuntu-latest
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: none
          - task: AzureWebAppContainer@1
            displayName: "Update Staging Web App"
            inputs:
              azureSubscription: $(azureSubscription)
              resourceGroupName: $(rgName)
              appName: $(stagingWebAppName)
              imageName: "$(acrName).azurecr.io/$(imageName):$(imageTag)"

# ─────────────── Promote to Production (approval) ─────────────
- stage: Deploy_Prod
  displayName: "CD – Promote to Production"
  dependsOn: Deploy_Staging
  condition: succeeded()
  jobs:
  - deployment: DeployProd
    environment: Prod           # manual approval configured here
    pool:
      vmImage: ubuntu-latest
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: none
          - task: AzureWebAppContainer@1
            displayName: "Update Production Web App"
            inputs:
              azureSubscription: $(azureSubscription)
              resourceGroupName: $(rgName)
              appName: $(prodWebAppName)
              imageName: "$(acrName).azurecr.io/$(imageName):$(imageTag)"
